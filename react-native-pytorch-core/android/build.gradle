/*
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

buildscript {
  // Buildscript is evaluated before everything else so we can't use getExtOrDefault
  def kotlin_version = rootProject.ext.has("kotlinVersion") ? rootProject.ext.get("kotlinVersion") : project.properties["PyTorchCore_kotlinVersion"]

  repositories {
    google()
    jcenter()
  }

  dependencies {
    classpath "com.android.tools.build:gradle:3.2.1"
    // noinspection DifferentKotlinGradleVersion
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
  }
}

apply plugin: "com.android.library"
apply plugin: "kotlin-android"

def getExtOrDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : project.properties["PyTorchCore_" + name]
}

def getExtOrIntegerDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : (project.properties["PyTorchCore_" + name]).toInteger()
}

android {
  compileSdkVersion getExtOrIntegerDefault("compileSdkVersion")
  buildToolsVersion getExtOrDefault("buildToolsVersion")
  defaultConfig {
    minSdkVersion 28
    targetSdkVersion getExtOrIntegerDefault("targetSdkVersion")
    versionCode 1
    versionName "1.0"
    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    packagingOptions {
      pickFirst '**/*.so'
    }
  }

  buildTypes {
    release {
      minifyEnabled false
    }
  }
  lintOptions {
    disable "GradleCompatible"
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
}

repositories {
  mavenCentral()
  jcenter()
  google()

  def found = false
  def defaultDir = null
  def androidSourcesName = "React Native sources"

  if (rootProject.ext.has("reactNativeAndroidRoot")) {
    defaultDir = rootProject.ext.get("reactNativeAndroidRoot")
  } else {
    defaultDir = new File(
            projectDir,
            "/../../../node_modules/react-native/android"
    )
  }

  if (defaultDir.exists()) {
    maven {
      url defaultDir.toString()
      name androidSourcesName
    }

    logger.info(":${project.name}:reactNativeAndroidRoot ${defaultDir.canonicalPath}")
    found = true
  } else {
    def parentDir = rootProject.projectDir

    1.upto(5, {
      if (found) return true
      parentDir = parentDir.parentFile

      def androidSourcesDir = new File(
              parentDir,
              "node_modules/react-native"
      )

      def androidPrebuiltBinaryDir = new File(
              parentDir,
              "node_modules/react-native/android"
      )

      if (androidPrebuiltBinaryDir.exists()) {
        maven {
          url androidPrebuiltBinaryDir.toString()
          name androidSourcesName
        }

        logger.info(":${project.name}:reactNativeAndroidRoot ${androidPrebuiltBinaryDir.canonicalPath}")
        found = true
      } else if (androidSourcesDir.exists()) {
        maven {
          url androidSourcesDir.toString()
          name androidSourcesName
        }

        logger.info(":${project.name}:reactNativeAndroidRoot ${androidSourcesDir.canonicalPath}")
        found = true
      }
    })
  }

  if (!found) {
    throw new GradleException(
            "${project.name}: unable to locate React Native android sources. " +
                    "Ensure you have you installed React Native as a dependency in your project and try again."
    )
  }

  // Repository holding the PyTorch Mobile libraries for Android
  maven {
    url "https://oss.sonatype.org/content/repositories/snapshots"
  }
}

def kotlin_version = getExtOrDefault('kotlinVersion')

dependencies {
  implementation "org.pytorch:pytorch_android:1.9.0-SNAPSHOT"
  implementation "org.pytorch:pytorch_android_torchvision:1.9.0-SNAPSHOT"

  // noinspection GradleDynamicVersion
  api "com.facebook.react:react-native:+"
  implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
  implementation "androidx.appcompat:appcompat:1.2.0"
  implementation "com.android.support.constraint:constraint-layout:2.0.4"
  implementation "androidx.coordinatorlayout:coordinatorlayout:1.1.0"

  implementation "androidx.cardview:cardview:1.0.0"
  testImplementation 'junit:junit:4.12'
  testImplementation 'org.json:json:20140107'
  testImplementation 'org.mockito:mockito-core:1.10.19'

  androidTestImplementation 'junit:junit:4.12'
  androidTestImplementation 'androidx.test:core:1.3.0'
  androidTestImplementation 'androidx.test:runner:1.3.0'
  androidTestImplementation 'androidx.test:rules:1.3.0'
  androidTestImplementation 'com.facebook.soloader:soloader:0.9.0'

  def camerax_version = "1.1.0-alpha02"
  implementation "androidx.camera:camera-core:$camerax_version"
  implementation "androidx.camera:camera-camera2:$camerax_version"
  implementation "androidx.camera:camera-lifecycle:$camerax_version"
  implementation "androidx.camera:camera-view:1.0.0-alpha22"

  implementation "androidx.constraintlayout:constraintlayout:2.0.4"
}
